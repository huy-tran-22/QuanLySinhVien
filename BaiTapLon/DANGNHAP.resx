<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABEJJREFUeF7tncmrFUcUhx+KxhFx5xRxQIQEEXSjKwcQnHaC0b/GAU0iCsF5QNCV
        A2oMURQV1LhxjFsViUMSFRyydQLj9wMfyOPc27729q1T3eeDD97itZ6qvl23qs7pej1BEARBEARBEARB
        EARBEARBEIjxuBo34FH8Ex/hf/gO3376+S+8jUdwHa7CCRj0kwG4APeiOvX/r/Qe7sGFqH87aME4/Amf
        otWRnfBv/BHjyfiMqXgQNZRYnVaFb1BP2BRsLCNwLb5Gq5O6ob5DtuJIbBRLsMqhpr8+xuVYe4biLvyA
        VkekVDH9goOxlozB62g13pOKUROCWjEDNQOxGuzRhzgda8FMfIFWQz37HGdj1uiTn2Pn96qbkO2ToDE/
        p2Gnlf/gt5gVQ/AqWg3K0RuY1exIU02rITmrKWoWLEaP8/yvVW1yv1gbhU/QakAd1Ip5OLplM1qB10nt
        2LpkMmqX0Qq6TmrXVm11xwG0Aq6jSvC4QnsnZfbztSO6G9UgT7ujRepJV6rUDcoyWYG2U3Pr0diLfj6H
        1u96dCO6YCA+QyvIds7BvmgBdxat3/emZkQucsxKoFsBFtlqOqebcAata7yptidHY7gVXJFzsRXf4Gm0
        rvPkTkxO2dIRJT6UIWuFbsIptK714l1MimYCVmBf6mVst7LUBthJtK71YtLZ0A9oBdUfL+AwbIVuwm9o
        XetB9UEyVC5oBdVf/0CVqbRiEP6K1rWpXYPJOIxWUGW8gkU34QRa16b0ECZDiykrqLJewnbfCboJx9G6
        NpW3sFHoJhxDqzNS+AAbh76076PVId1WRQeNpMz+UxVqY66RKDFidUi3beQNiCEoIY38EtZqdBNWnTTJ
        cRp6EyvnZ7T+8056EYs6v7ELsao/+bEVUUCVtT65b8atxMqpagg6j+1yAur839G61otdeZlDHaGb0Mkn
        oQ4JmTuYnO1oBVeklZTvJZeU5A5Mzjy0giuyDkn5+ZgclaWUGZqspHxOZSk6r8LN0Qd64doKsp25F2Yp
        G+gGzQT01rkVaDtV0KUjA1SaWKa4K5V6u9/dq6z70Qq2jrqoB+rLRGxKefokdMkWtIKuk26Kci20paDt
        WSvwOuj+FSWxDOv6kt5SzAKdwWM1Imf1/ls2aCuh0zVDKdVL59oSz4qxqNWi1aCc1Hea2pIl3+FLtBqW
        gzqsYxpmjY6rUUOsBnpWMc/CWvA95nRyioad7D/5fdHxNdfQarAn9YWb7ZhfhLablcTwuE5QTFrJZzfb
        KYOOrfwXrY5IoWZr2SyyOoW2LZRHSLmB13twa7uSmNqjgy/2YbePLtahUm53NVOgc9nWo85oszqtE2qo
        USbLXTLFE8oxL8Jt2ImdVZWOKIGi4oE4vr4EejJWoN4H0B9wUD2R1hT6ow3vUUPXK9QL4yqUVa2mygVV
        sRaf9CAIgiAIgiAIgiAIgiAIgiDo6fkI1iUakN+yfMYAAAAASUVORK5CYII=
</value>
  </data>
</root>